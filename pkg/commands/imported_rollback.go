// Code generated by go run tools/import_commands.go --talos-version v1.7.6 rollback
// DO NOT EDIT.

// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

package commands

import (
	"context"
	"fmt"

	"github.com/spf13/cobra"

	"github.com/siderolabs/talos/pkg/machinery/client"
)

// rollbackCmd represents the rollback command.
var rollbackCmd = &cobra.Command{
	Use:   "rollback",
	Short: "Rollback a node to the previous installation",
	Long:  ``,
	RunE: func(cmd *cobra.Command, args []string) error {
		return WithClient(func(ctx context.Context, c *client.Client) error {
			if err := c.Rollback(ctx); err != nil {
				return fmt.Errorf("error executing rollback: %s", err)
			}

			return nil
		})
	},
}

func init() {
	rollbackCmd.Flags().StringSliceVarP(&rollbackCmdFlags.configFiles,
		"file", "f", nil, "specify config files or patches in a YAML file (can specify multiple)",
	)
	rollbackCmd.PreRunE = func(cmd *cobra.
		Command, args []string) error {
		nodesFromArgs := len(GlobalArgs.
			Nodes,
		) > 0
		endpointsFromArgs := len(GlobalArgs.Endpoints) > 0
		for _, configFile := range rollbackCmdFlags.
			configFiles {
			if err := processModelineAndUpdateGlobals(configFile, nodesFromArgs, endpointsFromArgs,
				false); err !=
				nil {
				return err
			}
		}
		return nil
	}

	addCommand(rollbackCmd)
}

var rollbackCmdFlags struct {
	configFiles []string
}
